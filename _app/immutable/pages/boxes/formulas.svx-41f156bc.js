import{S,i as V,s as F,D as w,x as M,y as D,z as H,A as G,B as P,r as R,p as q,C,R as E,e as d,t as v,k as y,c as f,a as _,h as k,d as m,m as $,g,Q as u,b as z,n as I}from"../../chunks/index-0cc79b3e.js";import{B as T}from"../../chunks/Box-7a4e1585.js";import{R as j}from"../../chunks/Result-79dbd34f.js";function A(h){let s,t,o,n,a,l,r,c,e=`<code class="language-ts"><span class="token keyword">let</span> l <span class="token operator">=</span> <span class="token operator">...</span>
<span class="token keyword">let</span> w <span class="token operator">=</span> <span class="token operator">...</span>
<span class="token keyword">let</span> <span class="token constant">P</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>l<span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span></code>`;return{c(){s=d("div"),t=d("h2"),o=v("Perimeter"),n=y(),a=d("p"),l=v("Perimeter of a rectangle"),r=y(),c=d("pre"),this.h()},l(p){s=f(p,"DIV",{slot:!0});var i=_(s);t=f(i,"H2",{});var x=_(t);o=k(x,"Perimeter"),x.forEach(m),n=$(i),a=f(i,"P",{});var b=_(a);l=k(b,"Perimeter of a rectangle"),b.forEach(m),r=$(i),c=f(i,"PRE",{class:!0});var L=_(c);L.forEach(m),i.forEach(m),this.h()},h(){z(c,"class","language-ts"),z(s,"slot","input")},m(p,i){g(p,s,i),u(s,t),u(t,o),u(s,n),u(s,a),u(a,l),u(s,r),u(s,c),c.innerHTML=e},p:I,d(p){p&&m(s)}}}function Q(h){let s,t,o=`<span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.16em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mstyle mathsize="0.5em"><mi>P</mi><mo>=</mo><mn>2</mn><mi>l</mi><mo>+</mo><mn>2</mn><mi>w</mi></mstyle></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\\begin{equation*}
\\tiny P = 2l+2w
\\end{equation*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-2.85em;"><span class="pstrut" style="height:2.84em;"></span><span class="mord"><span class="mord mathnormal sizing reset-size6 size1" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.4089em;"></span><span class="mrel sizing reset-size6 size1">=</span><span class="mspace" style="margin-right:0.4089em;"></span><span class="mord sizing reset-size6 size1">2</span><span class="mord mathnormal sizing reset-size6 size1" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.3271em;"></span><span class="mbin sizing reset-size6 size1">+</span><span class="mspace" style="margin-right:0.3271em;"></span><span class="mord sizing reset-size6 size1">2</span><span class="mord mathnormal sizing reset-size6 size1" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">\u200B</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span></span></span></span></span>`;return{c(){s=d("div"),t=d("div"),this.h()},l(n){s=f(n,"DIV",{slot:!0});var a=_(s);t=f(a,"DIV",{class:!0});var l=_(t);l.forEach(m),a.forEach(m),this.h()},h(){z(t,"class","math math-display"),z(s,"slot","result")},m(n,a){g(n,s,a),u(s,t),t.innerHTML=o},p:I,d(n){n&&m(s)}}}function J(h){let s,t,o,n,a,l,r,c;return r=new j({props:{left:"",right:"",$$slots:{result:[Q],input:[A]},$$scope:{ctx:h}}}),{c(){s=d("p"),t=v("Below is a list of formulas for you convenience to use."),o=y(),n=d("h1"),a=v("Geometry"),l=y(),M(r.$$.fragment)},l(e){s=f(e,"P",{});var p=_(s);t=k(p,"Below is a list of formulas for you convenience to use."),p.forEach(m),o=$(e),n=f(e,"H1",{});var i=_(n);a=k(i,"Geometry"),i.forEach(m),l=$(e),D(r.$$.fragment,e)},m(e,p){g(e,s,p),u(s,t),g(e,o,p),g(e,n,p),u(n,a),g(e,l,p),H(r,e,p),c=!0},p(e,p){const i={};p&2&&(i.$$scope={dirty:p,ctx:e}),r.$set(i)},i(e){c||(R(r.$$.fragment,e),c=!0)},o(e){q(r.$$.fragment,e),c=!1},d(e){e&&m(s),e&&m(o),e&&m(n),e&&m(l),C(r,e)}}}function K(h){let s,t;const o=[h[0],B];let n={$$slots:{default:[J]},$$scope:{ctx:h}};for(let a=0;a<o.length;a+=1)n=w(n,o[a]);return s=new T({props:n}),{c(){M(s.$$.fragment)},l(a){D(s.$$.fragment,a)},m(a,l){H(s,a,l),t=!0},p(a,[l]){const r=l&1?G(o,[l&1&&P(a[0]),l&0&&P(B)]):{};l&2&&(r.$$scope={dirty:l,ctx:a}),s.$set(r)},i(a){t||(R(s.$$.fragment,a),t=!0)},o(a){q(s.$$.fragment,a),t=!1},d(a){C(s,a)}}}const B={title:"Formula Cheat Sheet",layout:"boxes"};function N(h,s,t){return h.$$set=o=>{t(0,s=w(w({},s),E(o)))},s=E(s),[s]}class X extends S{constructor(s){super(),V(this,s,N,K,F,{})}}export{X as default,B as metadata};
